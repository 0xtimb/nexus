import "@styles/globals.css";
import type { AppProps } from "next/app";
import Navbar from "@components/Navbar";
import { useEffect, useState } from "react";
import { ChakraProvider, extendTheme } from "@chakra-ui/react";
import "@rainbow-me/rainbowkit/styles.css";
import {
  getDefaultWallets,
  RainbowKitProvider,
  Theme,
  darkTheme,
  Chain,
} from "@rainbow-me/rainbowkit";
import { publicProvider } from "wagmi/providers/public";
import { alchemyProvider } from "wagmi/providers/alchemy";
import {
  defaultChains,
  configureChains,
  createClient,
  WagmiConfig,
} from "wagmi";
import merge from "lodash.merge";
import Head from "next/head";

const thetaTestnet: Chain = {
  id: 365,
  name: "Theta Testnet",
  network: "TFUEL",
  nativeCurrency: {
    decimals: 18,
    name: "TFUEL",
    symbol: "TFUEL",
  },
  rpcUrls: {
    default: "https://eth-rpc-api-testnet.thetatoken.org/rpc",
  },
  blockExplorers: {
    default: { name: "Explorer", url: "https://beta-explorer.thetatoken.org/" },
  },
  testnet: true,
};

const { chains, provider } = configureChains(
  [thetaTestnet],
  [publicProvider({ priority: 0 })]
);

const { connectors } = getDefaultWallets({
  appName: "Nexus",
  chains,
});

const wagmiClient = createClient({
  autoConnect: true,
  connectors,
  provider,
});

/* Theming */
const theme = extendTheme({
  styles: {
    global: {
      "*": {
        fontFamily: "Bai Jamjuree",
        color: "white",
      },
      a: {
        _hover: {
          textDecoration: "underline",
        },
      },
    },
  },
});

/* RainbowKit Theming */
const customTheme = merge(darkTheme(), {
  colors: {
    accentColor: "#18151E",
  },
} as Theme);

function MyApp({ Component, pageProps, router }: AppProps) {
  const [mounted, setMounted] = useState(false);

  useEffect(() => setMounted(true), []);
  if (!mounted) return null;

  return (
    <WagmiConfig client={wagmiClient}>
      <RainbowKitProvider chains={chains} theme={customTheme}>
        <ChakraProvider theme={theme}>
          <Head>
            <title>Nexus: Metaverse Marketplace</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <Navbar />
          <Component {...pageProps} key={router.route} />
        </ChakraProvider>
      </RainbowKitProvider>
    </WagmiConfig>
  );
}

export default MyApp;
